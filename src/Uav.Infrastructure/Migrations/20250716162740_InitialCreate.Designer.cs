// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uav.Domain.ValueObjects;
using Uav.Infrastructure.Persistence;

#nullable disable

namespace Uav.Infrastructure.Migrations
{
    [DbContext(typeof(UavDbContext))]
    [Migration("20250716162740_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Uav.Domain.Entities.Drone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("BatteryPercentage")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("CurrentMissionId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.ComplexProperty<Dictionary<string, object>>("CurrentPosition", "Uav.Domain.Entities.Drone.CurrentPosition#GpsCoordinate", b1 =>
                        {
                            b1.Property<double>("Latitude")
                                .HasColumnType("double precision");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double precision");
                        });

                    b.HasKey("Id");

                    b.HasIndex("CurrentMissionId");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("Uav.Domain.Entities.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<List<GpsCoordinate>>("Waypoints")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Uav.Domain.Entities.Drone", b =>
                {
                    b.HasOne("Uav.Domain.Entities.Mission", "CurrentMission")
                        .WithMany()
                        .HasForeignKey("CurrentMissionId");

                    b.Navigation("CurrentMission");
                });
#pragma warning restore 612, 618
        }
    }
}
